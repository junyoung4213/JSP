package spms.servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/member/delete")
public class MemberDeleteServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// utf-8로 코드셋을 처리해라
		resp.setContentType("text/html;charset=UTF-8");
		PrintWriter out = resp.getWriter();
		out.println("<html><head><title>회원 삭제</title></head>");
		out.println("<body><h1>회원 삭제</h1>");
		out.println("<form action='delete' method='post'>");
		out.println("이름: <input type='text' name='name'><br>");
		out.println("이메일: <input type='text' name='email'><br>");
		out.println("암호: <input type='password' name='password'>");
		out.println("<input type='submit' value='삭제'>");
		out.println("<input type='reset' value='취소'>");
		out.println("</form>");
		out.println("</body></html>");
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		// GET요청시 url에 포함된 한글을 아래처럼 설정해도 처리되지 않는다
		// 그래서 tomcat의 server.xml에서 
		// <connector URIEncoding="UTF-8" ~/>처리를 해야한다.
		// <Connector URIEndoing="UTF-8" connectionTimeout="2000">
		
		
		
		// 숫자/영문의 코드셋에 영향을 받지 않는다
		// 브라우저에서 utf-8로 보낸 한글은 utf-8로 처리해야 한다
		req.setCharacterEncoding("UTF-8"); // 이걸 써줘야 DB상에서 한글이 외계어로 안나온다.
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		final String sqlInsert = "DELETE FROM members FROM mno="+req.getParameter("no"); // NOW는 현재시간
		
		try {
			ServletContext sc = this.getServletContext();
			
			Class.forName(sc.getInitParameter("driver"));
			conn = DriverManager.getConnection(sc.getInitParameter("url"),sc.getInitParameter("username"),sc.getInitParameter("password"));
			pstmt=conn.prepareStatement(sqlInsert);
			pstmt.setString(1, req.getParameter("email"));
			pstmt.setString(2, req.getParameter("password"));
			pstmt.setString(3, req.getParameter("name"));
			pstmt.executeUpdate();
			
			// 바로 add -> list로 이동
			resp.sendRedirect("list");
			
			// 위처럼 바로 이동을 하면 아래 부분은 실행되지 않는다.
			/*
			 * resp.setContentType("text/html; charset=UTF-8"); PrintWriter out =
			 * resp.getWriter(); out.println("<html><head><title>회원등록결과</title>");
			 * out.println("</head>"); out.println("<body>");
			 * out.println("<p>등록 성공입니다!</p>"); out.println("</body></html>");
			 */
		} catch (Exception e) {
			throw new ServletException(e);
		} finally {
			try {
				if(pstmt!=null)
					pstmt.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				if(conn!=null)
					conn.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
