<JSP 내장객체>

1. config 객체

Servlet이 초기화 될 때 값을 가져온다.

해당 Servlet 내에서만 사용 가능하다.

web.xml에 데이터를 저장해두고 getInitParameter() 함수를 이용해서 JSP에 보내는 것이다.

우선 xml에서 초기화를 아래와같이 해준다.

<init-param>
 <param-name>adminId</param-name>
 <param-value>admin</param-value>
</init-param>
<init-param>
 <param-name>adminPw</param-name>
 <param-value>1234</param-value>
</init-param>

String adminId = getServletConfig().getInitParameter("adminId");
String adminPw = getServletConfig().getInitParameter("adminPw");

getServletConfig()를 사용해서 해당 servlet의 정의되어있는 config 객체를 가져온다.
(바로 config 객체로 접근해도 된다)
그리고 getInitParameter()를 사용해서 config 객체로부터 servlet이 초기화 될 때 만들어진
parameter 값을 가져온다.

자료 참조 링크 : https://bnzn2426.tistory.com/21
 
2. application 객체

application 전체적으로 데이터를 운용할 수 있다(여러 JSP 파일에 사용 가능)

setAttribute(), getAttribute() 로 속성을 설정, 가져올 수 있다.

application 객체로부터 getAttribute()로 값을 가져올 땐 무조건 (String) 캐스팅을 해줘야한다.

이미지 디렉토리나 ip주소 같이 어플리케이션 내에서 
공통적으로 자주 사용하는 데이터들을 설정해준다.

<context-param>
  <param-name>imgDir</param-name>
  <param-value>/upload/img</param-value>
</context-param>

<context-param>
  <param-name>testServerIP</param-name>
  <param-value>127.0.0.1</param-value>
</context-param>

String imgDir=getServletContext().getInitParameter("imgDir");
String testServerIP=getServletContext().getInitParameter("testServerIP");

getServletContext() 대신에 application을 사용할 수 있다!!


3. out 객체

html 코딩하듯이 html코드를 출력 가능하다.

4. exception 객체

에러가 발생했을때 처리를 해준다.

<%@ page errorPage="errorPage.jsp"%> 이렇게 맨 윗줄 아래에 정의를 해주어야 한다.

에러 페이지에서는 <%@ page isErrorPage="true"%> 를 적어서 

에러페이지임을 알려주어야한다.

exception.getMessage()로 어떤 에러가 났는지 받아올 수 있다.

response.setStatus(에러명) // 괄호 안에 적은 에러가 발생했을때 반응한다.

ex)response.setStatus(200) 이면 200에러가 발생시 반응.
